#!/bin/bash
set -e

# will extract from stdin and to ./proto/pachyderm/src
tar xf /dev/stdin

# VERSION matches the MajorVersion of pachyderm
OUTDIR="python_pachyderm/proto/v${VERSION}"

mkdir -p "${OUTDIR}"
mv ./proto/pachyderm/src/* "${OUTDIR}"

# Make sure to remove the gogoproto line, as that is Go specific
for i in $(find "${OUTDIR}" -name "*.proto"); do
    # remove the import
    sed -i 's/import.*gogo.proto.*\;//' "${i}"
    # remove usages of gogoproto types
    sed -i 's/\[.*gogoproto.*\]//' "${i}"
    sed -i 's/.*gogoproto.*//' "${i}"
done

# fix imports to be relative to OUTDIR
for i in $(find "${OUTDIR}" -name "*.proto"); do
    # Need to use perl for negative lookahead (which sed doesn't support)
    perl -pi -e "s/import \"((?!google).*)\"/import \"python_pachyderm\/proto\/v${VERSION}\/\$1\"/" "${i}"
done

# generate protobuf and gRPC code from proto files
# should result in {}_pb2.py and {}_pb2_grpc.py per proto
find "${OUTDIR}" -name '*.proto' | xargs python3 -m grpc_tools.protoc -I. \
  --python_out=. \
  --grpc_python_out=.

for i in $(find "${OUTDIR}" -name '*.proto' ); do 
    cat "${i}" \
      | awk '
          /^service.*{/,/^}/ {
              nope="true"
          }
          
          nope != "true" {
              print $0
          }

          nope == "true" {
              nope = "false"
          }
        ' >"${i}.2" \
      && mv "${i}.2" "${i}"
done

# Re-build protos again, but this time use betterproto (which generates
# docstrings based the .proto file's comments, and generally more pythonic
# structs)
mkdir ./betterproto
find "${OUTDIR}" -name '*.proto' | xargs python3 -m grpc_tools.protoc -I. \
  --python_betterproto_out=./betterproto

find "${OUTDIR}" -name '*.proto' | xargs rm

find "${OUTDIR}" -type d -exec touch {}/__init__.py \;

tar cf - "${OUTDIR}"
